{"version":3,"sources":["skylark-jade.js"],"names":["define","exports","module","__isValidToReturn","obj","Array","isArray","attr","__isEmptyObject","skylark","runtime","guard","value","length","iter","each","output","keys","Object","i","key","helper","context","helpers","helperName","args","out","apply","e","Promise","try","fn","resolve","templateFunction","toString","Benchpress","registerHelper","name","escapeCharMap","&","<",">","\"","'","`","=","replaceChar","c","escapeChars","str","replace","String","cache","globals","setGlobal","assign","jQuery","extend","render","template","data","block","addGlobals","reject","promise","loader","then","load","blocks","flush","parse","callback","TypeError","setTimeout","err","console","error","registerLoader","attach","benchpress","main"],"mappings":"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","file":"../skylark-jade.js","sourcesContent":["define([], function () {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    define(['skylark-langx/skylark'], function (skylark) {\n        var runtime = function () {\n            function guard(value) {\n                return value == null || Array.isArray(value) && value.length === 0 ? '' : value;\n            }\n            function iter(obj, each) {\n                if (!obj || typeof obj !== 'object') {\n                    return '';\n                }\n                var output = '';\n                var keys = Object.keys(obj);\n                var length = keys.length;\n                for (var i = 0; i < length; i += 1) {\n                    var key = keys[i];\n                    output += each(key, i, length, obj[key]);\n                }\n                return output;\n            }\n            function helper(context, helpers, helperName, args) {\n                if (typeof helpers[helperName] !== 'function') {\n                    return '';\n                }\n                try {\n                    var out = helpers[helperName].apply(context, args);\n                    return out || '';\n                } catch (e) {\n                    return '';\n                }\n            }\n            function runtime(helpers, context, templateFunction) {\n                return guard(templateFunction(helpers, context, guard, iter, helper)).toString();\n            }\n            if (typeof Promise.try !== 'function') {\n                Promise.try = {\n                    try: function _try(fn) {\n                        return new Promise(function (resolve) {\n                            return resolve(fn());\n                        });\n                    }\n                }.try;\n            }\n            return runtime;\n        }();\n        var Benchpress = typeof module === 'object' && module.exports ? module.exports : {};\n        Benchpress.runtime = runtime;\n        Benchpress.helpers = {};\n        Benchpress.registerHelper = function registerHelper(name, fn) {\n            Benchpress.helpers[name] = fn;\n        };\n        var escapeCharMap = {\n            '&': '&amp;',\n            '<': '&lt;',\n            '>': '&gt;',\n            '\"': '&quot;',\n            \"'\": '&#x27;',\n            '`': '&#x60;',\n            '=': '&#x3D;'\n        };\n        var replaceChar = function replaceChar(c) {\n            return escapeCharMap[c];\n        };\n        var escapeChars = /[&<>\"'`=]/g;\n        Benchpress.registerHelper('__escape', function (str) {\n            if (str == null) {\n                return '';\n            }\n            if (!str) {\n                return String(str);\n            }\n            return str.toString().replace(escapeChars, replaceChar);\n        });\n        Benchpress.cache = {};\n        Benchpress.globals = {};\n        Benchpress.setGlobal = function setGlobal(key, value) {\n            Benchpress.globals[key] = value;\n        };\n        var assign = Object.assign || jQuery.extend;\n        Benchpress.addGlobals = function addGlobals(data) {\n            return assign({}, Benchpress.globals, data);\n        };\n        Benchpress.flush = function flush() {\n            Benchpress.cache = {};\n        };\n        function load(template) {\n            return new Promise(function (resolve, reject) {\n                var promise = Benchpress.loader(template, function (templateFunction) {\n                    resolve(templateFunction);\n                });\n                if (promise && promise.then) {\n                    promise.then(resolve, reject);\n                }\n            });\n        }\n        function render(template, data, block) {\n            data = Benchpress.addGlobals(data || {});\n            return Promise.try(function () {\n                Benchpress.cache[template] = Benchpress.cache[template] || load(template);\n                return Benchpress.cache[template];\n            }).then(function (templateFunction) {\n                if (block) {\n                    templateFunction = templateFunction.blocks && templateFunction.blocks[block];\n                }\n                if (!templateFunction) {\n                    return '';\n                }\n                return runtime(Benchpress.helpers, data, templateFunction);\n            });\n        }\n        function parse(template, block, data, callback) {\n            if (!callback && typeof block === 'object' && typeof data === 'function') {\n                callback = data;\n                data = block;\n                block = null;\n            }\n            if (typeof callback !== 'function') {\n                throw TypeError('Invalid Arguments: callback must be a function');\n            }\n            if (!template) {\n                callback('');\n                return;\n            }\n            render(template, data, block).then(function (output) {\n                return setTimeout(callback, 0, output);\n            }, function (err) {\n                return console.error(err);\n            });\n        }\n        Benchpress.render = render;\n        Benchpress.parse = parse;\n        Benchpress.registerLoader = function registerLoader(loader) {\n            Benchpress.loader = loader;\n        };\n        return skylark.attach('itg.benchpress', Benchpress);\n    });\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine(\"skylark-jade/benchpress\", function(){});\n\ndefine('skylark-jade/main',[\r\n\t\"./benchpress\"\r\n],function(benchpress) {\r\n\r\n\treturn benchpress;\r\n});\ndefine('skylark-jade', ['skylark-jade/main'], function (main) { return main; });\n\n"]}