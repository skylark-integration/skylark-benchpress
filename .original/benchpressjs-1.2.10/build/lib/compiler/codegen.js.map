{"version":3,"sources":["../../../lib/compiler/codegen.js"],"names":["t","require","generate","default","defaults","minified","quotes","codegen","compiled","options","code","file","program","Object","assign","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,CAAC,GAAGC,OAAO,CAAC,aAAD,CAAjB;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,iBAAD,CAAP,CAA2BE,OAA5C;;AAEA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,QAAQ,EAAE,KADK;AAEfC,EAAAA,MAAM,EAAE;AAFO,CAAjB;AAKA;;;;;;AAKA,SAASC,OAAT,CAAiBC,QAAjB,EAA2BC,OAA3B,EAAoC;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAWR,QAAQ,CAACF,CAAC,CAACW,IAAF,CAAOX,CAAC,CAACY,OAAF,CAAUJ,QAAV,CAAP,CAAD,EAA8BK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBV,QAAlB,EAA4BK,OAA5B,CAA9B,CAAzB;AAEA,SAAOC,IAAP;AACD;;AAEDK,MAAM,CAACC,OAAP,GAAiBT,OAAjB","sourcesContent":["'use strict';\n\nconst t = require('babel-types');\nconst generate = require('babel-generator').default;\n\nconst defaults = {\n  minified: false,\n  quotes: 'single',\n};\n\n/**\n * Generate JS code from a compiled syntax tree\n * @param {object} compiled - Compiled JS AST\n * @param {object} options - Babel generator options\n */\nfunction codegen(compiled, options) {\n  const { code } = generate(t.file(t.program(compiled)), Object.assign({}, defaults, options));\n\n  return code;\n}\n\nmodule.exports = codegen;\n"],"file":"codegen.js"}