{"version":3,"sources":["../../../lib/compiler/debug.js"],"names":["fs","require","path","prefixer","tokenizer","parser","compiler","blocks","codegen","runtime","collapseWhitespace","str","replace","trim","testPath","join","__dirname","testTemplate","readFileSync","toString","testData","testHelpers","canspeak","data","isHuman","name","test","forum","double","iterator","animals","everything","template","helpers","prefixed","tokens","parsed","fnAst","ast","code","eval","output","compiled","rooms","out"],"mappings":"AAAA;AAEA;;AAEA;;;;AAIA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AAEA,MAAME,QAAQ,GAAGF,OAAO,CAAC,mCAAD,CAAxB;;AACA,MAAMG,SAAS,GAAGH,OAAO,CAAC,oCAAD,CAAzB;;AACA,MAAMI,MAAM,GAAGJ,OAAO,CAAC,iCAAD,CAAtB;;AACA,MAAMK,QAAQ,GAAGL,OAAO,CAAC,mCAAD,CAAxB;;AACA,MAAMM,MAAM,GAAGN,OAAO,CAAC,iCAAD,CAAtB;;AACA,MAAMO,OAAO,GAAGP,OAAO,CAAC,kCAAD,CAAvB;;AACA,MAAMQ,OAAO,GAAGR,OAAO,CAAC,yBAAD,CAAvB;;AAEA,MAAMS,kBAAkB,GAAGC,GAAG,IAAIA,GAAG,CAClCC,OAD+B,CACvB,2BADuB,EACM,IADN,EAE/BA,OAF+B,CAEvB,SAFuB,EAEZ,GAFY,EAG/BA,OAH+B,CAGvB,YAHuB,EAGT,MAHS,EAI/BC,IAJ+B,EAAlC,C,CAMA;;;AACA,MAAMC,QAAQ,GAAGZ,IAAI,CAACa,IAAL,CAAUC,SAAV,EAAqB,gDAArB,CAAjB;AAEA,MAAMC,YAAY,GAAGjB,EAAE,CAACkB,YAAH,CAAgBJ,QAAhB,EAA0BK,QAA1B,EAArB;;AAEA,MAAMC,QAAQ,GAAGnB,OAAO,CAAC,uBAAD,CAAxB;;AAEA,MAAMoB,WAAW,GAAG;AAClBC,EAAAA,QAAQ,CAACC,IAAD,EAAO;AACb,WAAQA,IAAI,CAACC,OAAL,IAAgBD,IAAI,CAACE,IAAL,KAAc,OAA/B,GAA0C,WAA1C,GAAwD,cAA/D;AACD,GAHiB;;AAIlBC,EAAAA,IAAI,CAACH,IAAD,EAAO;AACT,WAAOA,IAAI,CAACI,KAAL,IAAc,CAACJ,IAAI,CAACK,MAA3B;AACD,GANiB;;AAOlBJ,EAAAA,OAAO,CAACD,IAAD,EAAOM,QAAP,EAAiB;AACtB,WAAON,IAAI,CAACO,OAAL,CAAaD,QAAb,EAAuBL,OAA9B;AACD;;AATiB,CAApB;;AAYA,SAASO,UAAT,CAAoBC,QAApB,EAA8BT,IAA9B,EAAoCU,OAApC,EAA6C;AAC3C,QAAMC,QAAQ,GAAG/B,QAAQ,CAAC6B,QAAD,CAAzB;AACA,QAAMG,MAAM,GAAG/B,SAAS,CAAC8B,QAAD,CAAxB;AACA,QAAME,MAAM,GAAG/B,MAAM,CAAC8B,MAAD,CAArB;AACA,QAAME,KAAK,GAAG/B,QAAQ,CAAC8B,MAAD,EAAS,EAAT,CAAtB;AACA,QAAME,GAAG,GAAG/B,MAAM,CAAC8B,KAAD,CAAlB;AACA,QAAME,IAAI,GAAG/B,OAAO,CAAC8B,GAAD,CAApB;AACAE,EAAAA,IAAI,CAACD,IAAD,CAAJ,CAP2C,CAQ3C;;AACA,QAAME,MAAM,GAAGhC,OAAO,CAACwB,OAAD,EAAUV,IAAV,EAAgBmB,QAAQ,CAACnC,MAAT,CAAgBoC,KAAhC,CAAtB;AAEA,SAAOF,MAAP;AACD;;AAED,MAAMG,GAAG,GAAGlC,kBAAkB,CAACqB,UAAU,CAACd,YAAD,EAAeG,QAAf,EAAyBC,WAAzB,CAAX,CAA9B;AAEA","sourcesContent":["'use strict';\n\n/* eslint no-debugger: off, no-unused-vars: off, no-eval: off, no-undef: off */\n\n/**\n * This file is for debugging failing tests. It lets you inspect each step of compilation easily.\n */\n\nconst fs = require('fs');\nconst path = require('path');\n\nconst prefixer = require('../../build/lib/compiler/prefixer');\nconst tokenizer = require('../../build/lib/compiler/tokenizer');\nconst parser = require('../../build/lib/compiler/parser');\nconst compiler = require('../../build/lib/compiler/compiler');\nconst blocks = require('../../build/lib/compiler/blocks');\nconst codegen = require('../../build/lib/compiler/codegen');\nconst runtime = require('../../build/lib/runtime');\n\nconst collapseWhitespace = str => str\n  .replace(/(?:[ \\t]*[\\r\\n]+[ \\t]*)+/g, '\\n')\n  .replace(/[\\t ]+/g, ' ')\n  .replace(/ (<)|(>) /g, '$1$2')\n  .trim();\n\n// path.join(__dirname, '../../tmp/flags-detail.tpl')\nconst testPath = path.join(__dirname, '../../tests/templates/source/modern-helper.tpl');\n\nconst testTemplate = fs.readFileSync(testPath).toString();\n\nconst testData = require('../../tests/data.json');\n\nconst testHelpers = {\n  canspeak(data) {\n    return (data.isHuman && data.name === 'Human') ? 'Can speak' : 'Cannot speak';\n  },\n  test(data) {\n    return data.forum && !data.double;\n  },\n  isHuman(data, iterator) {\n    return data.animals[iterator].isHuman;\n  },\n};\n\nfunction everything(template, data, helpers) {\n  const prefixed = prefixer(template);\n  const tokens = tokenizer(prefixed);\n  const parsed = parser(tokens);\n  const fnAst = compiler(parsed, {});\n  const ast = blocks(fnAst);\n  const code = codegen(ast);\n  eval(code);\n  // const output = runtime(helpers, data, compiled);\n  const output = runtime(helpers, data, compiled.blocks.rooms);\n\n  return output;\n}\n\nconst out = collapseWhitespace(everything(testTemplate, testData, testHelpers));\n\ndebugger;\n"],"file":"debug.js"}